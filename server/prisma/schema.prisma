// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model alimentos {
  alimento_id     Int                  @id @default(autoincrement())
  nome            String
  descricao       String?
  preco           Decimal
  restaurante_id  Int
  categoria_id    Int
  categoria       categorias_alimentos @relation(fields: [categoria_id], references: [categoria_id])
  restaurante     restaurantes         @relation(fields: [restaurante_id], references: [restaurante_id])
  pedido_alimento pedido_alimento[]
}

model clientes {
  cliente_id             Int                      @id @default(autoincrement())
  nome                   String
  cpf                    String                   @unique
  celular                String
  email                  String
  senha                  String
  imagem_id              Int?
  data_hora_cadastro     DateTime                 @default(now())
  imagem                 imagens?                 @relation(fields: [imagem_id], references: [imagem_id])
  pedidos                pedidos[]
  avaliacoes             avaliacoes[]
  cartoes_cliente        cartoes_cliente[]
  restaurantes_favoritos restaurantes_favoritos[]
  enderecos_clientes     enderecos_clientes[]
}

model pedidos {
  pedido_id         Int               @id @default(autoincrement())
  forma_pagamento   String            @default("C")
  tempo_estimado    String
  status            String            @default("R")
  data_hora_pedido  DateTime          @default(now())
  data_hora_entrega DateTime?
  cliente_id        Int
  entregador_id     Int?
  cartao_id         Int?
  cliente           clientes          @relation(fields: [cliente_id], references: [cliente_id])
  entregador        entregadores?     @relation(fields: [entregador_id], references: [entregador_id])
  cartao            cartoes_cliente?  @relation(fields: [cartao_id], references: [cartao_id])
  avaliacoes        avaliacoes[]
  pedido_alimento   pedido_alimento[]
}

model avaliacoes {
  avaliacao_id Int      @id @default(autoincrement())
  nota         Decimal
  comentario   String?
  cliente      clientes @relation(fields: [cliente_id], references: [cliente_id])
  pedido       pedidos  @relation(fields: [pedido_id], references: [pedido_id])
  cliente_id   Int
  pedido_id    Int
}

model pedido_alimento {
  id          Int       @id @default(autoincrement())
  pedido_id   Int
  alimento_id Int
  pedido      pedidos   @relation(fields: [pedido_id], references: [pedido_id])
  alimento    alimentos @relation(fields: [alimento_id], references: [alimento_id])
}

model enderecos {
  endereco_id  Int            @id @default(autoincrement())
  cep          String
  logradouro   String
  numero       String
  bairro       String
  complemento  String?
  cod_cidade   String
  restaurantes restaurantes[]
}

model categorias_alimentos {
  categoria_id Int         @id @default(autoincrement())
  descricao    String
  alimentos    alimentos[]
}

model imagens {
  imagem_id          Int            @id @default(autoincrement())
  nome_arquivo       String
  link               String
  excluida           String         @default("N")
  data_hora_exclusao DateTime?      @default(now())
  clientes           clientes[]
  restaurantes       restaurantes[]
}

model cartoes_cliente {
  cartao_id     Int       @id @default(autoincrement())
  numero_cartao String
  validade      DateTime
  cvv           String
  titular       String
  cpf_cnpj      String
  apelido       String?
  cliente_id    Int
  pedidos       pedidos[]
  cliente       clientes  @relation(fields: [cliente_id], references: [cliente_id])
}

model restaurantes_favoritos {
  id             Int          @id @default(autoincrement())
  cliente_id     Int
  restaurante_id Int
  cliente        clientes     @relation(fields: [cliente_id], references: [cliente_id])
  restaurante    restaurantes @relation(fields: [restaurante_id], references: [restaurante_id])
}

model entregadores {
  entregador_id Int       @id @default(autoincrement())
  nome          String
  cpf           String
  celular       String
  pedidos       pedidos[]
}

model enderecos_clientes {
  id         Int      @id @default(autoincrement())
  tipo       String   @default("C")
  cliente_id Int
  cliente    clientes @relation(fields: [cliente_id], references: [cliente_id])
}

model restaurantes {
  restaurante_id         Int                      @id @default(autoincrement())
  nome                   String
  cnpj                   String
  telefone               String
  celular                String?
  imagem_id              Int
  endereco_id            Int
  alimentos              alimentos[]
  restaurantes_favoritos restaurantes_favoritos[]
  imagem                 imagens                  @relation(fields: [imagem_id], references: [imagem_id])
  endereco               enderecos                @relation(fields: [endereco_id], references: [endereco_id])
}
